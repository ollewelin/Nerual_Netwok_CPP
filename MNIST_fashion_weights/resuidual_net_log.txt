olle@olle-TUF-Gaming-FX505DT-FX505DT:~/pytorch_cpp/t14/Nerual_Netwok_CPP$ ./residual_net 
General Neural Network Residual net test Beta version under work...
3 stackaed nn blocks with residual connections 
file_size 47040016
MNIST_file_size = 47040016
train.. or t10k.. ..-images-idx3-ubyte file is successfully loaded in to MNIST_data[MN_index] memory
file_size 60008
train... or t10k...  ...-labels-idx1-ubyte file is successfully loaded in to MNIST_lable[MN_index] memory
fc_m_resnet Constructor
Seed radomizer done
fc_m_resnet Constructor
Seed radomizer done
fc_m_resnet Constructor
Seed radomizer done
Fully connected residual neural network object
fc_m_resnet object version : 0.0.6
 Number of hidden layers is set to = 1
Size of hidden_layer[0][x] = 300
hidden_layer vector is now set up
Now setup all_weight, change_weights vectors size of this fc block
Size of temporary dummy_1D_weight_vector from input layer connection[0] is = 785
Size of temporary dummy_1D_weight_vector last hidden layer connection[0] is = 301
The size of all_weight and change_weights in now setup OK !
Note that the program how call this object could only set this size once. No protections against change size of the public vectors
Setup state = 2
Size of layer dimentions[] of weights at the this nn block = 2
Size of node dimentions[][] of weights for hidden layer number 0 is: 300
Size of weight dimentions[][][] of weights for hidden layer number 0 is: 785
Size of node dimentions[][] of weights for hidden layer number 1 is: 50
Size of weight dimentions[][][] of weights for hidden layer number 1 is: 301
 Number of hidden layers is set to = 3
Size of hidden_layer[0][x] = 50
==== Skip connection is used ====
input_layer.size() = 50
output_layer.size() = 30
skip_conn_multiple_part = 1
skip_conn_rest_part = 20
Size of hidden_layer[1][x] = 50
==== Skip connection is used ====
input_layer.size() = 50
output_layer.size() = 30
skip_conn_multiple_part = 1
skip_conn_rest_part = 20
Size of hidden_layer[2][x] = 30
hidden_layer vector is now set up
Now setup all_weight, change_weights vectors size of this fc block
Size of temporary dummy_1D_weight_vector from input layer connection[0] is = 51
Size of temporary dummy_1D_weight_vector from hidden layer connection[1] is = 51
Size of temporary dummy_1D_weight_vector from hidden layer connection[2] is = 51
Size of temporary dummy_1D_weight_vector last hidden layer connection[2] is = 31
The size of all_weight and change_weights in now setup OK !
Note that the program how call this object could only set this size once. No protections against change size of the public vectors
Setup state = 2
Size of layer dimentions[] of weights at the this nn block = 4
Size of node dimentions[][] of weights for hidden layer number 0 is: 50
Size of weight dimentions[][][] of weights for hidden layer number 0 is: 51
Size of node dimentions[][] of weights for hidden layer number 1 is: 50
Size of weight dimentions[][][] of weights for hidden layer number 1 is: 51
Size of node dimentions[][] of weights for hidden layer number 2 is: 30
Size of weight dimentions[][][] of weights for hidden layer number 2 is: 51
Size of node dimentions[][] of weights for hidden layer number 3 is: 30
Size of weight dimentions[][][] of weights for hidden layer number 3 is: 31
==== Skip connection is used ====
input_layer.size() = 50
output_layer.size() = 30
skip_conn_multiple_part = 1
skip_conn_rest_part = 20
 Number of hidden layers is set to = 1
Size of hidden_layer[0][x] = 15
hidden_layer vector is now set up
Now setup all_weight, change_weights vectors size of this fc block
Size of temporary dummy_1D_weight_vector from input layer connection[0] is = 31
Size of temporary dummy_1D_weight_vector last hidden layer connection[0] is = 16
The size of all_weight and change_weights in now setup OK !
Note that the program how call this object could only set this size once. No protections against change size of the public vectors
Setup state = 2
Size of layer dimentions[] of weights at the this nn block = 2
Size of node dimentions[][] of weights for hidden layer number 0 is: 15
Size of weight dimentions[][][] of weights for hidden layer number 0 is: 31
Size of node dimentions[][] of weights for hidden layer number 1 is: 10
Size of weight dimentions[][][] of weights for hidden layer number 1 is: 16
Do you want to load weights from saved weight file = Y/N 
n
Randomize weights 3D vector all weights of fc_resnet object....
Randomize weights is DONE!
setup_state = 3
Randomize weights 3D vector all weights of fc_resnet object....
Randomize weights is DONE!
setup_state = 3
Randomize weights 3D vector all weights of fc_resnet object....
Randomize weights is DONE!
setup_state = 3
target_lable = 1
Epoch ----0
input node --- [0] = 0
Epoch 0
input node [0] = 1.58608
Output node [0] = 0.0914465  Target node [0] = 0
Output node [1] = 0.118684  Target node [1] = 0
Output node [2] = 0.0989962  Target node [2] = 0
Output node [3] = 0.0901992  Target node [3] = 0
Output node [4] = 0.0912529  Target node [4] = 0
Output node [5] = 0.122738  Target node [5] = 0
Output node [6] = 0.10848  Target node [6] = 0
Output node [7] = 0.088672  Target node [7] = 0
Output node [8] = 0.0976119  Target node [8] = 0
Output node [9] = 0.0919195  Target node [9] = 1
Training loss = 138385
correct_classify_cnt = 5922
correct_ratio = 9.87
Epoch ----1
input node --- [0] = 1.58608
Epoch 1
input node [0] = 0.134693
Output node [0] = 1.77039e-05  Target node [0] = 0
Output node [1] = 2.76344e-06  Target node [1] = 0
Output node [2] = 4.29379e-05  Target node [2] = 0
Output node [3] = 4.03769e-05  Target node [3] = 0
Output node [4] = 8.89454e-06  Target node [4] = 0
Output node [5] = 0.144712  Target node [5] = 1
Output node [6] = 8.44893e-05  Target node [6] = 0
Output node [7] = 0.403438  Target node [7] = 0
Output node [8] = 0.00540151  Target node [8] = 0
Output node [9] = 0.446251  Target node [9] = 0
Training loss = 127214
correct_classify_cnt = 9595
correct_ratio = 15.9917
Epoch ----2
input node --- [0] = 0.134693
Epoch 2
input node [0] = 0.273379
Output node [0] = 0.00123926  Target node [0] = 0
Output node [1] = 6.46177e-05  Target node [1] = 0
Output node [2] = 0.00520433  Target node [2] = 0
Output node [3] = 0.00081387  Target node [3] = 0
Output node [4] = 0.0124398  Target node [4] = 0
Output node [5] = 0.00501405  Target node [5] = 0
Output node [6] = 0.00985491  Target node [6] = 0
Output node [7] = 0.000238688  Target node [7] = 0
Output node [8] = 0.965054  Target node [8] = 1
Output node [9] = 7.69642e-05  Target node [9] = 0
Training loss = 64798.2
correct_classify_cnt = 33181
correct_ratio = 55.3017
Epoch ----3
input node --- [0] = 0.273379
Epoch 3
input node [0] = 0.0733029
Output node [0] = 1.88809e-05  Target node [0] = 0
Output node [1] = 2.9799e-06  Target node [1] = 0
Output node [2] = 2.41355e-05  Target node [2] = 0
Output node [3] = 0.00222982  Target node [3] = 0
Output node [4] = 0.00118747  Target node [4] = 0
Output node [5] = 0.977382  Target node [5] = 1
Output node [6] = 0.000144559  Target node [6] = 0
Output node [7] = 0.00999102  Target node [7] = 0
Output node [8] = 0.00861141  Target node [8] = 0
Output node [9] = 0.000407908  Target node [9] = 0
Training loss = 39662.2
correct_classify_cnt = 44998
correct_ratio = 74.9967
Epoch ----4
input node --- [0] = 0.0733029
Epoch 4
input node [0] = 0.0133802
Output node [0] = 6.11424e-07  Target node [0] = 0
Output node [1] = 1.50588e-07  Target node [1] = 0
Output node [2] = 6.34478e-07  Target node [2] = 0
Output node [3] = 2.50662e-05  Target node [3] = 0
Output node [4] = 1.15121e-05  Target node [4] = 0
Output node [5] = 0.00887132  Target node [5] = 0
Output node [6] = 8.72854e-07  Target node [6] = 0
Output node [7] = 0.983586  Target node [7] = 1
Output node [8] = 2.58161e-05  Target node [8] = 0
Output node [9] = 0.00747803  Target node [9] = 0
Training loss = 31317.6
correct_classify_cnt = 48966
correct_ratio = 81.61
Epoch ----5
input node --- [0] = 0.0133802
Epoch 5
input node [0] = 0.893415
Output node [0] = 0.000724127  Target node [0] = 0
Output node [1] = 0.00129568  Target node [1] = 0
Output node [2] = 0.0700883  Target node [2] = 0
Output node [3] = 0.0212755  Target node [3] = 0
Output node [4] = 0.892997  Target node [4] = 1
Output node [5] = 0.000523765  Target node [5] = 0
Output node [6] = 0.0123576  Target node [6] = 0
Output node [7] = 0.000405929  Target node [7] = 0
Output node [8] = 0.00021105  Target node [8] = 0
Output node [9] = 0.00012122  Target node [9] = 0
Training loss = 28182.2
correct_classify_cnt = 50167
correct_ratio = 83.6117
Epoch ----6
input node --- [0] = 0.893415
Epoch 6
input node [0] = 0.00880141
Output node [0] = 1.21135e-05  Target node [0] = 0
Output node [1] = 5.16306e-06  Target node [1] = 0
Output node [2] = 3.4328e-05  Target node [2] = 0
Output node [3] = 0.000581542  Target node [3] = 0
Output node [4] = 0.000245909  Target node [4] = 0
Output node [5] = 0.286886  Target node [5] = 1
Output node [6] = 1.80126e-05  Target node [6] = 0
Output node [7] = 0.690603  Target node [7] = 0
Output node [8] = 0.00289862  Target node [8] = 0
Output node [9] = 0.0187155  Target node [9] = 0
Training loss = 26224.6
correct_classify_cnt = 50866
correct_ratio = 84.7767
Epoch ----7
input node --- [0] = 0.00880141
Epoch 7
input node [0] = 0.376972
Output node [0] = 0.00585722  Target node [0] = 0
Output node [1] = 0.00116637  Target node [1] = 0
Output node [2] = 0.0494431  Target node [2] = 0
Output node [3] = 0.00932146  Target node [3] = 0
Output node [4] = 0.140582  Target node [4] = 0
Output node [5] = 0.000600747  Target node [5] = 0
Output node [6] = 0.767539  Target node [6] = 1
Output node [7] = 0.000117483  Target node [7] = 0
Output node [8] = 0.0239958  Target node [8] = 0
Output node [9] = 0.00137677  Target node [9] = 0
Training loss = 24634.3
correct_classify_cnt = 51353
correct_ratio = 85.5883
Epoch ----8
input node --- [0] = 0.376972
Epoch 8
input node [0] = 0.19503
Output node [0] = 0.839867  Target node [0] = 1
Output node [1] = 0.00527362  Target node [1] = 0
Output node [2] = 0.0085657  Target node [2] = 0
Output node [3] = 0.0296546  Target node [3] = 0
Output node [4] = 0.00041451  Target node [4] = 0
Output node [5] = 1.08593e-05  Target node [5] = 0
Output node [6] = 0.115561  Target node [6] = 0
Output node [7] = 5.17057e-06  Target node [7] = 0
Output node [8] = 0.000456668  Target node [8] = 0
Output node [9] = 0.000190297  Target node [9] = 0
Training loss = 23367.2
correct_classify_cnt = 51788
correct_ratio = 86.3133
Epoch ----9
input node --- [0] = 0.19503
Epoch 9
input node [0] = 0.0132451
Output node [0] = 1.54151e-06  Target node [0] = 0
Output node [1] = 1.4696e-06  Target node [1] = 0
Output node [2] = 9.95856e-06  Target node [2] = 0
Output node [3] = 0.000140072  Target node [3] = 0
Output node [4] = 7.54608e-05  Target node [4] = 0
Output node [5] = 0.00604804  Target node [5] = 0
Output node [6] = 5.19708e-06  Target node [6] = 0
Output node [7] = 0.943568  Target node [7] = 1
Output node [8] = 0.00177006  Target node [8] = 0
Output node [9] = 0.0483803  Target node [9] = 0
Training loss = 22623.6
correct_classify_cnt = 52021
correct_ratio = 86.7017
Save data weights ...
Save data finnish !
Save data weights ...
Save data finnish !
Save data weights ...
Save data finnish !
Epoch ----10
input node --- [0] = 0.0132451



